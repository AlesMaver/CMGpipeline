version 1.0

# wigToBigWig conversion
# The input files are the reference fast index file and an array of wig files, we would like to convert

task wigToBigWig {
  input {
    Array[File] wig_files
    File ref_fasta_index
  }
  
  runtime {
    docker: "abralab/wigtobigwig:v4"
    requested_memory_mb_per_core: 8000
    cpu: 2
    runtime_minutes: 700
  }
  
  command <<<
    # set -exo pipefail
    # set -e
    
    # echo ~{ref_fasta_index}
    
    echo "Making chrom_sizes file from reference fasta index file"
    cut -f1,2 ~{ref_fasta_index} > chrom_sizes.txt
    echo "chrome sizes:"
    cat chrom_sizes.txt
    echo "---konec---"
    
    for x in ~{sep=' ' wig_files}
    do
        echo "${x}" to $(basename "${x}" .wig).bw
        ## touch $(basename "${x}" .wig).bw
        wigToBigWig "${x}" chrom_sizes.txt $(basename "${x}" .wig).bw
    done;
      
  >>>
   
  output {
    Array[File] bigWig_files = glob("*.bw")
  }
}

workflow wigToBigWig_wf {
  input {
    # Array[File] wig_files
    File  ref_fasta_index
    File? baf_wig
    File? cnv_genome_wig
    File? cnv_wig
    
  }
  Array[File] wig_files = select_all([baf_wig, cnv_wig, cnv_genome_wig])
  call wigToBigWig {
    input:
      wig_files=wig_files,
      ref_fasta_index=ref_fasta_index
      
  }
  # output {
  #   Array[File] sorted_bed = sort_bed.sorted_bed
  # }
}
